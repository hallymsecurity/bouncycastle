import java.security.Security;

import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

import org.bouncycastle.jce.provider.BouncyCastleProvider;


public class SimpleSymmetricExample  {
	public static void main(String args[]) throws Exception
	{
    	    Security.addProvider(new BouncyCastleProvider());

    	
			byte[]        input = new byte[] {
			                0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
			                0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
			                0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17 };
			byte[]        keyBytes = new byte[] {
			                0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
			                0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f,
			                };
			
			byte[]          ivBytes = new byte[] {
			                0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01, 0x00,
			                0x07, 0x06, 0x05, 0x04, 0x03, 0x02, 0x01, 0x00};
			

//modify
